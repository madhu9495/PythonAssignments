In Python 2.7 

mylist=range(4)
seclist=mylist
print seclist
Output:[0, 1, 2, 3]

mylist.append(4)
print seclist
Output:[0, 1, 2, 3, 4]

seclist=mylist[:] #Here we are reassigning mylist by slicing entire list
print seclist
Output:[0, 1, 2, 3, 4]

mylist.append(5) #After reassignment of seclist any changes to mylist would not reflect
print seclist
Output:[0, 1, 2, 3, 4]
  
  
Conversely, in Python 3.3.4 the same code snippet returns the error: 'range' object has no attribute 'append'
In Python2, range returns a list.

In Python3, range returns a range object. The range object does not have an append method.
-----------------------------------------------------------------
  mylist=range(4)
   seclist=mylist
   print(seclist)
Output: range(0, 4)
-------------------------------------------------------------------
   mylist.append(4)

Error: Traceback (most recent call last):
  File "python", line 1, in <module>
AttributeError: 'range' object has no attribute 'append'
---------------------------------------------------------------------

   seclist=mylist[:]
   print(seclist)
Output: range(0, 4)
----------------------------------------------------------------------
   mylist.append(5)

Error: Traceback (most recent call last):
  File "python", line 1, in <module>
AttributeError: 'range' object has no attribute 'append'
------------------------------------------------------------------------------------------------------------------------------------------
To fix, convert the range object to a list:

mylist=list(range(4))
seclist=mylist
print(seclist)
mylist.append(4)
print(seclist)

Output:[0, 1, 2, 3]
       [0, 1, 2, 3, 4]



